(()=>{"use strict";var e={n:t=>{var r=t&&t.__esModule?()=>t.default:()=>t;return e.d(r,{a:r}),r},d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=require("express");var r=e.n(t);const n=require("cors");var a=e.n(n);const s=require("helmet");var i=e.n(s);const o=require("morgan");var u=e.n(o);const l=require("fs");var c=e.n(l);const p=require("path");var h=e.n(p);function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function v(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}(new(function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),v(this,"logPath",h().join(__dirname,"..","logs","access.log")),v(this,"accessLogStream",c().createWriteStream(this.logPath,{flags:"a"})),v(this,"handleMiscRoutes",(function(){t.app.get("/",(function(e,t){t.status(200).json({error:null,data:{server:"Base-Healthy"}})})),t.app.all("*",(function(e,t){t.status(404).json({error:"Requested route doesn't exist - 404",data:null})}))})),this.app=r()(),this.port=4e3,this.initializeMiddlewares(),this.handleMiscRoutes()}var t,n,s;return t=e,(n=[{key:"listen",value:function(){var e=this;this.app.listen(this.port,(function(){console.log("Server is up on the port: ".concat(e.port))}))}},{key:"initializeMiddlewares",value:function(){this.app.use(a()()),this.app.use(r().json()),this.app.use(i()()),this.app.use(u()("common",{stream:this.accessLogStream}))}}])&&f(t.prototype,n),s&&f(t,s),Object.defineProperty(t,"prototype",{writable:!1}),e}())).listen()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJtYXBwaW5ncyI6Im1CQUNBLElBQUlBLEVBQXNCLENDQTFCQSxFQUF5QkMsSUFDeEIsSUFBSUMsRUFBU0QsR0FBVUEsRUFBT0UsV0FDN0IsSUFBT0YsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREFELEVBQW9CSSxFQUFFRixFQUFRLENBQUVHLEVBQUdILElBQzVCQSxDQUFNLEVDTGRGLEVBQXdCLENBQUNNLEVBQVNDLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWFAsRUFBb0JTLEVBQUVGLEVBQVlDLEtBQVNSLEVBQW9CUyxFQUFFSCxFQUFTRSxJQUM1RUUsT0FBT0MsZUFBZUwsRUFBU0UsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRSLEVBQXdCLENBQUNjLEVBQUtDLElBQVVMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLElDQWxGLE1BQU0sRUFBK0JJLFFBQVEsVyxhQ0E3QyxNQUFNLEVBQStCQSxRQUFRLFEsYUNBN0MsTUFBTSxFQUErQkEsUUFBUSxVLGFDQTdDLE1BQU0sRUFBK0JBLFFBQVEsVSxhQ0E3QyxNQUFNLEVBQStCQSxRQUFRLE0sYUNBN0MsTUFBTSxFQUErQkEsUUFBUSxRLDRTQ0NqQyxJQ01OQyxXQWNKLGFBQWUsWSw0RkFBQSwwQkFYV0MsSUFBQUEsS0FDeEJDLFVBQ0EsS0FDQSxPQUNBLGVBT2EseUJBTDJCQyxJQUFBQSxrQkFDeENDLEtBQUtDLFFBQ0wsQ0FBRUMsTUFBTyxPQUdJLDJCQWtDWSxXQUl6QixFQUFLQyxJQUFJZCxJQUFJLEtBQUssU0FBQ2UsRUFBS0MsR0FDdEJBLEVBQUlDLE9BQU8sS0FBS0MsS0FBSyxDQUNuQkMsTUFBTyxLQUNQQyxLQUFNLENBQ0pDLE9BQVEsaUJBR2IsSUFLRCxFQUFLUCxJQUFJUSxJQUFJLEtBQUssU0FBQ1AsRUFBS0MsR0FDdEJBLEVBQUlDLE9BQU8sS0FBS0MsS0FBSyxDQUNuQkMsTUFBTyxzQ0FDUEMsS0FBTSxNQUVULEdBQ0YsSUF2RENULEtBQUtHLElBQU1TLE1BQ1haLEtBQUthLEtBQU8sSUFFWmIsS0FBS2Msd0JBQ0xkLEtBQUtlLGtCQUNOLEMsNkNBRUQsV0FBaUIsV0FDZmYsS0FBS0csSUFBSWEsT0FBT2hCLEtBQUthLE1BQU0sV0FFekJJLFFBQVFDLElBQVIsb0NBQXlDLEVBQUtMLE1BQy9DLEdBQ0YsRyxtQ0FFRCxXQUNFYixLQUFLRyxJQUFJZ0IsSUFBSUMsT0FDYnBCLEtBQUtHLElBQUlnQixJQUFJUCxJQUFBQSxRQUtiWixLQUFLRyxJQUFJZ0IsSUFBSUUsT0FLYnJCLEtBQUtHLElBQUlnQixJQUNQRyxJQUFPLFNBQVUsQ0FDZkMsT0FBUXZCLEtBQUt3QixrQkFHbEIsTSxnRkE5Q0c1QixLREpGb0IsUSIsInNvdXJjZXMiOlsid2VicGFjazovL29zbGFzaC1iZS93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9vc2xhc2gtYmUvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vb3NsYXNoLWJlL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9vc2xhc2gtYmUvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9vc2xhc2gtYmUvZXh0ZXJuYWwgY29tbW9uanMgXCJleHByZXNzXCIiLCJ3ZWJwYWNrOi8vb3NsYXNoLWJlL2V4dGVybmFsIGNvbW1vbmpzIFwiY29yc1wiIiwid2VicGFjazovL29zbGFzaC1iZS9leHRlcm5hbCBjb21tb25qcyBcImhlbG1ldFwiIiwid2VicGFjazovL29zbGFzaC1iZS9leHRlcm5hbCBjb21tb25qcyBcIm1vcmdhblwiIiwid2VicGFjazovL29zbGFzaC1iZS9leHRlcm5hbCBub2RlLWNvbW1vbmpzIFwiZnNcIiIsIndlYnBhY2s6Ly9vc2xhc2gtYmUvZXh0ZXJuYWwgbm9kZS1jb21tb25qcyBcInBhdGhcIiIsIndlYnBhY2s6Ly9vc2xhc2gtYmUvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vb3NsYXNoLWJlLy4vc3JjL2FwcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiY29uc3QgX19XRUJQQUNLX05BTUVTUEFDRV9PQkpFQ1RfXyA9IHJlcXVpcmUoXCJleHByZXNzXCIpOyIsImNvbnN0IF9fV0VCUEFDS19OQU1FU1BBQ0VfT0JKRUNUX18gPSByZXF1aXJlKFwiY29yc1wiKTsiLCJjb25zdCBfX1dFQlBBQ0tfTkFNRVNQQUNFX09CSkVDVF9fID0gcmVxdWlyZShcImhlbG1ldFwiKTsiLCJjb25zdCBfX1dFQlBBQ0tfTkFNRVNQQUNFX09CSkVDVF9fID0gcmVxdWlyZShcIm1vcmdhblwiKTsiLCJjb25zdCBfX1dFQlBBQ0tfTkFNRVNQQUNFX09CSkVDVF9fID0gcmVxdWlyZShcImZzXCIpOyIsImNvbnN0IF9fV0VCUEFDS19OQU1FU1BBQ0VfT0JKRUNUX18gPSByZXF1aXJlKFwicGF0aFwiKTsiLCJpbXBvcnQgQXBwIGZyb20gXCIuL2FwcFwiO1xuY29uc3QgYXBwID0gbmV3IEFwcCgpO1xuXG5hcHAubGlzdGVuKCk7XG4iLCJpbXBvcnQgZXhwcmVzcywgeyBBcHBsaWNhdGlvbiB9IGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiO1xuaW1wb3J0IGhlbG1ldCBmcm9tIFwiaGVsbWV0XCI7XG5pbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcbmltcG9ydCBmcyBmcm9tIFwiZnNcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5cbmNsYXNzIEFwcCB7XG4gIHByaXZhdGUgYXBwOiBBcHBsaWNhdGlvbjtcbiAgcHJpdmF0ZSBwb3J0OiBudW1iZXI7XG4gIHByaXZhdGUgbG9nUGF0aDogc3RyaW5nID0gcGF0aC5qb2luKFxuICAgIF9fZGlybmFtZSxcbiAgICBcIi4uXCIsXG4gICAgXCJsb2dzXCIsXG4gICAgXCJhY2Nlc3MubG9nXCIsXG4gICk7XG4gIHByaXZhdGUgYWNjZXNzTG9nU3RyZWFtOiBmcy5Xcml0ZVN0cmVhbSA9IGZzLmNyZWF0ZVdyaXRlU3RyZWFtKFxuICAgIHRoaXMubG9nUGF0aCxcbiAgICB7IGZsYWdzOiBcImFcIiB9LFxuICApO1xuXG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICB0aGlzLmFwcCA9IGV4cHJlc3MoKTtcbiAgICB0aGlzLnBvcnQgPSA0MDAwO1xuXG4gICAgdGhpcy5pbml0aWFsaXplTWlkZGxld2FyZXMoKTtcbiAgICB0aGlzLmhhbmRsZU1pc2NSb3V0ZXMoKTtcbiAgfVxuXG4gIHB1YmxpYyBsaXN0ZW4gKCkge1xuICAgIHRoaXMuYXBwLmxpc3Rlbih0aGlzLnBvcnQsICgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHVwIG9uIHRoZSBwb3J0OiAke3RoaXMucG9ydH1gKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgaW5pdGlhbGl6ZU1pZGRsZXdhcmVzICgpIHtcbiAgICB0aGlzLmFwcC51c2UoY29ycygpKTtcbiAgICB0aGlzLmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuXG4gICAgLyoqXG4gICAgICogU2VjdXJpdHkgaGVhZGVycyB0byBiZSBhdHRhY2hlZCB3aXRoIHJlcXVlc3RzXG4gICAgICovXG4gICAgdGhpcy5hcHAudXNlKGhlbG1ldCgpKTtcblxuICAgIC8qKlxuICAgICAqIEZvciBsb2cgcmVsYXRlZCBzZXJ2aWNlc1xuICAgICAqL1xuICAgIHRoaXMuYXBwLnVzZShcbiAgICAgIG1vcmdhbihcImNvbW1vblwiLCB7XG4gICAgICAgIHN0cmVhbTogdGhpcy5hY2Nlc3NMb2dTdHJlYW0sXG4gICAgICB9KSxcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBoYW5kbGVNaXNjUm91dGVzID0gKCkgPT4ge1xuICAgIC8qKlxuICAgICAqIEJhc2Ugcm91dGUgLSB0byBjaGVjayBBUEkgaGVhbHRoXG4gICAgICovXG4gICAgdGhpcy5hcHAuZ2V0KFwiL1wiLCAocmVxLCByZXMpID0+IHtcbiAgICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBzZXJ2ZXI6IFwiQmFzZS1IZWFsdGh5XCIsXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8qKlxuICAgICAqIEhhbmRsaW5nIGFsbCB1bmRlZmluZWQgcm91dGVzXG4gICAgICovXG4gICAgdGhpcy5hcHAuYWxsKFwiKlwiLCAocmVxLCByZXMpID0+IHtcbiAgICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcbiAgICAgICAgZXJyb3I6IFwiUmVxdWVzdGVkIHJvdXRlIGRvZXNuJ3QgZXhpc3QgLSA0MDRcIixcbiAgICAgICAgZGF0YTogbnVsbCxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iXSwibmFtZXMiOlsiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZSIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImV4cG9ydHMiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJyZXF1aXJlIiwiQXBwIiwicGF0aCIsIl9fZGlybmFtZSIsImZzIiwidGhpcyIsImxvZ1BhdGgiLCJmbGFncyIsImFwcCIsInJlcSIsInJlcyIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsImRhdGEiLCJzZXJ2ZXIiLCJhbGwiLCJleHByZXNzIiwicG9ydCIsImluaXRpYWxpemVNaWRkbGV3YXJlcyIsImhhbmRsZU1pc2NSb3V0ZXMiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwidXNlIiwiY29ycyIsImhlbG1ldCIsIm1vcmdhbiIsInN0cmVhbSIsImFjY2Vzc0xvZ1N0cmVhbSJdLCJzb3VyY2VSb290IjoiIn0=